{
  "s1a": {
    "process_id": "load_collection",
    "process_description": "Loading the data; The order of the specified bands is important for the following reduce operation.",
    "arguments": {
      "id": "s1a_csar_grdh_iw",
      "spatial_extent": {
        "west": 16.1,
        "east": 16.6,
        "north": 48.6,
        "south": 47.2
      },
      "temporal_extent": ["2017-02-28", "2017-06-01"],
      "bands": ["VV", "VH"]
    }
  },
  "s1b": {
    "process_id": "load_collection",
    "process_description": "Loading the data; The order of the specified bands is important for the following reduce operation.",
    "arguments": {
      "id": "s1b_csar_grdh_iw",
      "spatial_extent": {
        "west": 16.1,
        "east": 16.6,
        "north": 48.6,
        "south": 47.2
      },
      "temporal_extent": ["2017-02-28", "2017-06-01"],
      "bands": ["VV", "VH"]
    }
  },
  "s1": {
    "process_id": "merge_cubes",
    "process_description": "Merging two data cubes",
    "arguments": {
      "cube1": {"from_node": "s1a"},
      "cube2": {"from_node": "s1b"}
    }
  },
  "s1_masked": {
    "process_id": "mask",
    "description": "mask data",
    "arguments": {
      "data": {"from_node": "s1"},
      "mask": {
        "callback": {
          "process_id": "apply",
          "description": "",
          "arguments": {
            "data": {"from_node": "s1"},
            "process": {
              "callback": {
                "process_id": "eq",
                "description": "",
                "arguments": {
                  "x": {"from_argument": "data"},
                  "y": "-9999"
                }
              }
            }
          }
        }
      }
    }
  },
  "vv_vh": {
    "process_id": "reduce",
    "process_description": "Compute new band. Formula: VV/VH",
    "arguments": {
      "data": {"from_node": "s1_masked"},
      "dimension": "spectral",
      "reducer": {
        "callback": {
          "vv_el": {
            "process_id": "array_element",
            "arguments": {
              "data": {"from_argument": "data"},
              "index": 0
            }
          },
          "vh_el": {
            "process_id": "array_element",
            "arguments": {
              "data": {"from_argument": "data"},
              "index": 1
            }
          },
          "vv_vh_el": {
            "process_id": "divide",
            "arguments": {
              "data": [{"from_node": "vv_el"}, {"from_node": "vh_el"}]
            }
          }
        }
      },
      "binary": "True"
    }
  },
  "vv_vh2": {
    "process_id": "add_dimension",
    "process_description": "Add lost spectral dimension",
    "arguments": {
      "name": "spectral",
      "value": "vv_vh",
      "type": "bands"
    }
  },
  "s1_masked_merged": {
    "process_id": "merge_cubes",
    "process_description": "Merging two data cubes",
    "arguments": {
      "cube1": {"from_node": "vv_vh2"},
      "cube2": {"from_node": "s1_masked"}
    }
  },
  "s1_monthly": {
    "process_id": "aggregate_temporal",
    "process_description": "Calculates monthly average values.",
    "arguments": {
      "data": {"from_node": "s1_masked_merged"},
      "intervals": [
        [ "2015-03-01", "2015-04-01" ],
        [ "2015-04-01", "2015-05-01" ],
        [ "2015-05-01", "2015-06-01" ],
        [ "2015-06-01", "2015-07-01" ],
        [ "2015-07-01", "2015-08-01" ],
        [ "2015-08-01", "2015-09-01" ]
      ],
      "labels": [
        "mar", "apr", "may", "jun", "jul", "aug"
      ],
      "reducer": {
        "callback": {
          "process_id": "mean",
          "process_description": "Calculate average",
          "arguments": {
            "data": {"from_argument": "data"}
          },
          "result": "True"
        }
      }
    }
  },
  "R_vv_scaled": {
    "process_id": "apply",
    "description": "",
    "arguments": {
      "data": {
        "callback": {
          "process_id": "linear_scale_range",
          "description": "",
          "arguments": {
            "x": {
              "callback": {
                "process_id": "filter_bands",
                "process_description": "Get march data for polarization vv",
                "arguments": {
                  "data": {
                    "callback": {
                      "process_id": "filter_temporal",
                      "process_description": "Get march data",
                      "arguments": {
                        "data": {"from_node": "s1_monthly"},
                        "extent": "mar"
                      }
                    }
                  },
                  "bands": ["vv"]
                }
              }
            },
            "inputMin": "-2000",
            "inputMax": "-1000",
            "outputMin": "0",
            "outputMax": "254"
          }
        }
      }
    }
  },
  "G_vh_scaled": {
    "process_id": "apply",
    "description": "",
    "arguments": {
      "data": {
        "callback": {
          "process_id": "linear_scale_range",
          "description": "",
          "arguments": {
            "x": {
              "callback": {
                "process_id": "filter_bands",
                "process_description": "Get april data for polarization vh",
                "arguments": {
                  "data": {
                    "callback": {
                      "process_id": "filter_temporal",
                      "process_description": "Get april data",
                      "arguments": {
                        "data": {"from_node": "s1_monthly"},
                        "extent": "apr"
                      }
                    }
                  },
                  "bands": ["vh"]
                }
              }
            },
            "inputMin": "-2000",
            "inputMax": "-1000",
            "outputMin": "0",
            "outputMax": "254"
          }
        }
      }
    }
  },
  "B_vv_vh_scaled": {
    "process_id": "apply",
    "description": "",
    "arguments": {
      "data": {
        "callback": {
          "process_id": "linear_scale_range",
          "description": "",
          "arguments": {
            "x": {
              "callback": {
                "process_id": "filter_bands",
                "process_description": "Get may data for polarization vv/vh",
                "arguments": {
                  "data": {
                    "callback": {
                      "process_id": "filter_temporal",
                      "process_description": "Get may data",
                      "arguments": {
                        "data": {"from_node": "s1_monthly"},
                        "extent": "may"
                      }
                    }
                  },
                  "bands": ["vv_vh"]
                }
              }
            },
            "inputMin": "0.2",
            "inputMax": "0.6",
            "outputMin": "0",
            "outputMax": "254"
          }
        }
      }
    }
  },
  "RGB": {
    "process_id": "merge_cubes",
    "process_description": "Merging two data cubes",
    "arguments": {
      "cube1": {"from_node": "R_vv_scaled"},
      "cube2": {
        "callback": {
          "process_id": "merge_cubes",
          "process_description": "Merging two data cubes",
          "arguments": {
            "cube1": {"from_node": "G_vh_scaled"},
            "cube2": {"from_node": "B_vv_vh_scaled"}
          }
        }
      }
    }
  },
  "RGB_unmasked": {
    "process_id": "mask",
    "description": "Set nans to 255.",
    "arguments": {
      "data": {"from_node": "RGB"},
      "mask": {
        "callback": {
          "process_id": "apply",
          "description": "",
          "arguments": {
            "data": {"from_node": "RGB"},
            "process": {
              "callback": {
                "process_id": "is_nan",
                "description": "",
                "arguments": {
                  "x": {"from_argument": "data"}
                }
              }
            }
          }
        }
      },
      "replacement": "255"
    }
  },
  "output": {
    "process_id": "save_result",
    "description": "save to disk",
    "arguments": {
      "data": {"from_node": "RGB_unmasked"},
      "format": "Gtiff",
      "options": {
        "nodatavalue": "255"
      }
    }
  }
}
